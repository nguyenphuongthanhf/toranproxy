# For new install:
#  sudo systemctl stop systemd-resolved
#  sudo systemctl disable systemd-resolved
#
# docker network create --driver=bridge --subnet=172.21.0.0/16 --gateway=172.21.0.1 https-proxy
# docker run -d --restart=always --name=https-proxy --network=https-proxy -v /var/run/docker.sock:/tmp/docker.sock:ro -p 80:80 -p 443:443 -e VIRTUAL_PROTO=https 990863991647.dkr.ecr.us-west-2.amazonaws.com/devops/https_proxy:lastest
# docker run -d --restart=always --name=dnsmasq --network=https-proxy --cap-add=NET_ADMIN -p 127.0.0.53:53:53/tcp -p 127.0.0.53:53:53/udp -p 127.0.0.1:53:53/tcp -p 127.0.0.1:53:53/udp -p 192.168.68.171:53:53/tcp -p 192.168.68.171:53:53/udp andyshinn/dnsmasq:2.78 --address=/mio/192.168.68.178 --server=192.168.68.207 --server=192.168.68.206


# Notes: create docker volumes for elasticsearch
# docker volume create --name elasticsearch_data

version: "3.5"

networks:
  default:
    driver: bridge
  proxy:
    external: true
    name: https-proxy

volumes:
  elasticsearch_data:
    external: true

services:

    php:
        #build: http://git.anphabe.net/devops/docker-phpfpm.git
        image: 990863991647.dkr.ecr.us-west-2.amazonaws.com/devops/phpfpm:v7.2.6.1
        volumes:
            - ${PROJECT_FOLDER}:/app
    nginx:
        #build: http://git.anphabe.net/devops/docker-nginx.git
        image: 990863991647.dkr.ecr.us-west-2.amazonaws.com/devops/nginx:v1.1.1
        depends_on:
            - php
        volumes:
            - ./nginx-vhost-anphabe.conf:/etc/nginx/conf.d/anphabe.mio.conf
            - ${PROJECT_FOLDER}:/app
        environment:
            VIRTUAL_HOST: "*.anphabe.mio"
            CERT_NAME: "*.anphabe.mio"
        networks:
            proxy: {}
            default: {}

    shortflake:
        #build: http://git.anphabe.net/mio/shortflake.git
        image: 990863991647.dkr.ecr.us-west-2.amazonaws.com/devops/shortflake:v1.1.1
        depends_on:
            - php

    mail:
        image: mailhog/mailhog:v1.0.0
        ports:
            - 1025:1025
            - 8025:8025
        depends_on:
            - php
        networks:
            proxy: {}
            default: {}

    memcached:
        image: memcached:1.5.8-alpine
        depends_on:
          - php

    redis:
        image: redis:4.0.9-alpine
        depends_on:
          - php

    beanstalkd:
        image: schickling/beanstalkd
        depends_on:
          - php

    beanstalkd-aurora:
        image: 990863991647.dkr.ecr.us-west-2.amazonaws.com/devops/beanstalkd-aurora:1.1
        ports:
          - 8080:8080

#    mysql:
#        image: percona
#        container_name: dev_mysql
#        environment:
#          MYSQL_ROOT_PASSWORD: "root"
#        volumes:
#          - /data/mysql_data:/data
#        ports:
#          - "3306:3306"



#  unoconv:
#    image: zrrrzzt/docker-unoconv-webservice
#    depends_on:
#      - php
#    ports:
#      - "2002:2002"
#    environment:
#     - PAYLOAD_MAX_SIZE=10485760

# mysql:
#   image: percona
#   container_name: dev_mysql
#   environment:
#     MYSQL_ROOT_PASSWORD: "root"
#   volumes_from:
#     - mysql_data
#   ports:
#     - "3306:3306"
#   networks:
#     dev:
#       aliases:
#         - mysql

#  mongodb:
#    image: mongoclient/mongoclient
#    container_name: dev_mongoclient
#    depends_on:
#      - php
#    ports:
#      - "27017:27017"
#      - "3000:3000"
#    networks:
#      dev:
#        aliases:
#          - mongodb

    elasticsearch:
      build: http://git.anphabe.net/devops/docker-elasticsearch6-dev.git
      image: anphabe/elasticsearch
      volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data
      depends_on:
       - php
      ports:
        - "9200:9200"
      environment:
       - cluster.name=dev
       - node.name=es1
#      - transport.host=127.0.0.1
       - bootstrap.memory_lock=true
      networks:
        proxy: {}
        default: {}
      ulimits:
        memlock:
           soft: -1
           hard: -1
        nofile:
           soft: 65536
           hard: 65536
#        cap_add:
#         - IPC_LOCK

    elasticsearch-hq:
       image: elastichq/elasticsearch-hq
       depends_on:
          - elasticsearch
       ports:
          - "5000:5000"
       networks:
          proxy: {}
          default: {}

#  mysql_data:
#    image: busybox
#    container_name: dev_mysql_data
#    volumes:
#      - /ext4Data1/dev/lamp2/mysql_data:/data

#  blackfire:
#    image: blackfire/blackfire
#    depends_on:
#      - php
#    ports:
#      - "8707:8707"
#    environment:
#      # Exposes the host BLACKFIRE_SERVER_ID and TOKEN environment variables.
#      BLACKFIRE_SERVER_ID: "487b286e-f276-4973-b5a0-5be9e1c7a0cb"
#      BLACKFIRE_SERVER_TOKEN: "96e0ac196080df8f1503156787907e8991c9e272834ff57db7c81ee90bc4c3f0"
#      BLACKFIRE_LOG_LEVEL: 4
